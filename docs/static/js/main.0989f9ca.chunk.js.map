{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridCard.jsx","components/UI/Loader.jsx","components/GifGrid.jsx","hooks/useFetch.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","length","categories","type","className","onChange","target","value","getGifs","a","url","encodeURI","fetch","json","data","gifs","map","id","title","images","downsized_medium","console","log","GifCard","style","src","alt","Loader","GifGrid","loading","state","setState","useEffect","then","imgs","useFetch","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFH,EAAY,IACZD,EAASK,QAAUP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAkBM,QAI7D,SACE,uBACEC,KAAK,OACLC,UAAU,oBACVC,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAEO,OAAOC,QACtCA,MAAOX,O,+BClBFY,EAAO,uCAAG,WAAOZ,GAAP,qBAAAa,EAAA,6DACbC,EADa,iDACmCC,UAAUf,GAD7C,wEAIegB,MAAMF,GAJrB,8BAI2BG,OAJ3B,uBAIPC,EAJO,EAIPA,KACFC,EAAOD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,MAA4B,CAC9CF,GAAIA,EACJC,MAAOA,EACPR,IAAG,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBV,QARnB,kBAURK,GAVQ,kCAYfM,QAAQC,IAAR,MAZe,0DAAH,sDCaLC,EAXC,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,GAAIP,EAAiB,EAAjBA,IAAKQ,EAAY,EAAZA,MAC1B,OACE,sBAAcd,UAAU,yCAAyCoB,MAAO,CAAE,MAAS,SAAnF,UACE,qBAAKC,IAAKf,EAAKN,UAAU,eAAesB,IAAI,MAAMF,MAAO,CAAE,UAAa,WACxE,qBAAKpB,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SAA4Bc,QAHtBD,ICMCU,EARA,WACX,OACI,qBAAKvB,UAAU,0BAAf,SACI,sBAAKA,UAAU,WAAf,UAA0B,wBAAW,wBAAW,wBAAW,8BC0BxDwB,EA1BC,SAAC,GAAkB,IAGjC,ECLsB,SAAChC,GACvB,MAA0BD,mBAAS,CACjCmB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRxB,EAAQZ,GACLqC,MAAK,SAAAC,GACJH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGd,CAACjC,IAIGkC,EDb2BK,CAHF,EAAfvC,UAGHuB,EAAd,EAAQL,KAAce,EAAtB,EAAsBA,QAEtB,OACE,mCAEE,qBAAKzB,UAAU,MAAf,SAEIyB,EAEE,cAAC,EAAD,IAEAV,EAAOH,KAAI,SAAAoB,GAAK,OACd,qBAAKhC,UAAU,QAAf,SACE,cAAC,EAAD,eAAagC,KADaA,EAAMnB,YEOjCoB,EAvBM,WACnB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACE,sBAAKU,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,QAAf,UACE,8CACA,uBACA,cAAC,EAAD,CAAaV,cAAeA,SAGhC,qBAAKU,UAAU,WAAf,SAEIF,EAAWc,KAAI,SAAApB,GAAQ,OACrB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCd1B0C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0989f9ca.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [category, setCategory] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setCategory('')\n    category.length && setCategories(categories => [category, ...categories])\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control my-2\"\n        onChange={(e) => setCategory(e.target.value)}\n        value={category}\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=ZrFDA3d5AmJAaV4udXFH6NI7YRZTqssf`\n\n    try {\n        const { data } = await (await fetch(url)).json()\n        const gifs = data.map(({ id, title, images }) => ({\n            id: id,\n            title: title,\n            url: images?.downsized_medium.url\n        }))\n        return gifs\n    } catch (error) {\n        console.log(error)\n    }\n}\n","import React from 'react'\n\nconst GifCard = ({ id, url, title }) => {\n  return (\n    <div key={id} className=\"card animate__animated animate__fadeIn\" style={{ \"width\": \"18rem\" }}>\n      <img src={url} className=\"card-img-top\" alt=\"...\" style={{ 'maxHeight': '150px' }} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default GifCard\n","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div className=\"col-12 text-center pt-5\">\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport { useFetch } from '../hooks/useFetch'\nimport GifCard from './GifGridCard'\nimport Loader from './UI/Loader';\n\nconst GifGrid = ({ category }) => {\n  // const [images, setImages] = useState([])\n\n  const { data: images, loading } = useFetch(category);\n\n  return (\n    <>\n      {/* <h4>{category}</h4> */}\n      <div className=\"row\">\n        {\n          loading\n            ?\n            <Loader />\n            :\n            images.map(image => (\n              <div className=\"col-3\" key={image.id}>\n                <GifCard {...image} />\n              </div>\n            ))\n        }\n      </div>\n\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetch = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category)\n      .then(imgs => {\n        setState({\n          data: imgs,\n          loading: false\n        })\n      })\n  }, [category])\n\n\n\n  return state; // { data: [], loading: true } \n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['One Punch'])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row my-2\">\n        <div className=\"col-4\">\n          <h2>GifExpertApp</h2>\n          <hr />\n          <AddCategory setCategories={setCategories} />\n        </div>\n      </div>\n      <div className=\"row my-2\">\n        {\n          categories.map(category => (\n            <GifGrid key={category} category={category} />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}